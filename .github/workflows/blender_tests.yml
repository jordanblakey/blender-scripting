name: Blender Tests

on:
  push:
    branches: [ main ] # Or your default branch
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Adjust if your project uses a different version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poethepoet  # For running 'poe test'
        # Assuming requirements.txt contains other necessary Python packages
        # If not, add them here, e.g., pip install coverage Pillow ffmpeg-python
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Download and Setup Blender
      run: |
        # Using Blender 4.1.1 as an example - replace with desired version
        BLENDER_VERSION_MAJOR_MINOR="4.1"
        BLENDER_VERSION_FULL="4.1.1"
        BLENDER_ARCHIVE="blender-${BLENDER_VERSION_FULL}-linux-x64.tar.xz"
        
        wget https://mirror.clarkson.edu/blender/release/Blender${BLENDER_VERSION_MAJOR_MINOR}/${BLENDER_ARCHIVE}
        tar -xf ${BLENDER_ARCHIVE}
        
        # Add Blender to PATH for this job
        echo "$GITHUB_WORKSPACE/blender-${BLENDER_VERSION_FULL}-linux-x64" >> $GITHUB_PATH
        
        # Alternative: Define an environment variable for the Blender executable
        # echo "BLENDER_PATH=$GITHUB_WORKSPACE/blender-${BLENDER_VERSION_FULL}-linux-x64/blender" >> $GITHUB_ENV


    - name: Verify Blender installation
      run: blender --version

    - name: Run tests with poethepoet
      # The 'poe test' command from pyproject.toml is:
      # blender --background --python tests/run_tests.py -- --no-buffer --verbosity 2
      # This command should now use the Blender from the PATH
      run: poe test
      # To include coverage, ensure 'poe test' calls tests/run_tests.py with --coverage,
      # or add a separate step/task:
      # run: blender --background --python tests/run_tests.py -- --coverage --no-buffer --verbosity 2

    # Optional: Upload coverage report
    # - name: Upload coverage report
    #   if: always() # Run even if tests fail, to see partial coverage
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: coverage-report
    #     path: htmlcov/ # Assumes .coveragerc outputs HTML to htmlcov/
