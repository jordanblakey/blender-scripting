name: Blender Tests

on:
  push:
    branches: [main] # Or your default branch
  pull_request:
    branches: [main] # Or your default branch

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: docker.io/blendergrid/blender:latest

    steps:
      - name: Inspect environment
        run: |
          # print environment information
          echo "Distribution: $(cat /etc/issue | head -n 1 | cut -d ' ' -f 1-3)"
          echo "User: $(whoami):$(groups)"

          # symlink `blender` command
          ln -s /usr/local/blender/blender /usr/bin/blender
          echo "Blender version: $(blender --background --quiet)"
          blender -b -q --python-expr "import bpy; print(f'Python in Blender: {bpy}')"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          echo "Running tests in Blender..."
          blender -b -P tests/run_tests.py
      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: "3.12" # Adjust if your project uses a different version

      # - name: Install Python dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install poethepoet  # For running 'poe test'
      #     # Assuming requirements.txt contains other necessary Python packages
      #     # If not, add them here, e.g., pip install coverage Pillow ffmpeg-python
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Install butils for Blender (custom setup)
      #   run: python -m butils install

      # - name: Verify Blender installation
      #   run: blender --version

      # - name: Run tests with poethepoet
      #   # The 'poe test' command from pyproject.toml is:
      #   # blender --background --python tests/run_tests.py -- --no-buffer --verbosity 2
      #   # This command should now use the Blender from the PATH
      #   run: poe test
      #   # To include coverage, ensure 'poe test' calls tests/run_tests.py with --coverage,
      #   # or add a separate step/task:
      #   # run: blender --background --python tests/run_tests.py -- --coverage --no-buffer --verbosity 2
