[tool.poe.tasks.default]
help = "Show available poe tasks"
cmd = "poe -h"

[tool.poe.tasks.install]
help = "Install all project dependencies."
sequence = [
  "install-butils",
  "install-githooks",
  "install-blender",
  "install-ffmpeg",
  "install-act",
]

[tool.poe.tasks]
install-butils = "python -m butils install"
install-githooks = "rsync -av tests/githooks/ .git/hooks/"
install-blender = "sudo snap install blender"
install-ffmpeg = "sudo apt install ffmpeg"
install-act = "./butils/commands/install/act.sh"

[tool.poe.tasks.act]
help = "Run unit tests. Add --input 'testcase=test.Case.function' to run specific tests."
cwd = "$POE_PWD"
cmd = """
  act workflow_dispatch
    --input 'verbosity=2'
    --input='print=true'
    --input='coverage=false'
"""

[tool.poe.tasks.blend]
help = "`blender -P script.py`."
cwd = "$POE_PWD"
cmd = "blender --python"

[tool.poe.tasks.bblend]
help = "`blender -b -P script.py`."
cwd = "$POE_PWD"
cmd = "blender --background --python"

[tool.poe.tasks.eblend]
help = "`blender -b --python-expr`."
cwd = "$POE_PWD"
cmd = "blender --background --python-expr"

[tool.poe.tasks.create]
help = "`python -m butils create`. See `poe create --help`."
cwd = "$POE_PWD"
cmd = "python -m butils create"

[tool.poe.tasks.compress]
help = "`python -m butils compress`. See `poe compress --help`."
cwd = "$POE_PWD"
cmd = "python -m butils compress"


[tool.coverage.run]
# choose what to run coverage against
# source = ["butils"]

# or choose what to omit
omit = ["*/scripts/modules/bpy/*", "tests/*"]
